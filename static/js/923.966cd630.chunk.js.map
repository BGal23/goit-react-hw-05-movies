{"version":3,"file":"static/js/923.966cd630.chunk.js","mappings":"6MAEaA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAK,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiC,MADvD,mCACTJ,EAAQ,+BAAAK,OAAkCN,EAAK,YAAAM,OADtC,oCACuDH,EAAAE,KAAA,EACnDE,EAAAA,EAAAA,IAAUN,GAAU,KAAD,EAA5B,OAAJC,EAAIC,EAAAK,KAAAL,EAAAM,OAAA,SACHP,GAAI,wBAAAC,EAAAO,OAAA,GAAAX,EAAA,KACZ,gBALwBY,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,I,2HCsCzB,EApCiB,WACf,IAAAC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/CG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCtB,EAAQkB,EAAaO,IAAI,UAAY,GACrCC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,uBAAAvB,OAA0BN,EAAK,MAC9CL,EAAAA,EAAAA,GAAakC,GAAWC,MAAK,SAAAC,GAAM,OACjCP,EAAiBO,EAAOC,KAAKC,QAAQ,GAEzC,GAAG,CAACjC,IAEJ,IAAMkC,EAAeX,EAAcY,KAAI,SAAAC,GAAK,OAC1CC,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,GAAAlC,OAAK8B,EAAMK,IAAMC,MAAO,CAAEC,KAAMjB,GAAWY,SAChDF,EAAMQ,OAASR,EAAMS,QAFjBT,EAAMK,GAIV,IAGP,OACEK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,SAAOW,KAAK,OAAOC,MAAOjD,EAAOkD,SAvBlB,SAAAC,GACnB,IAAMC,EAASD,EAAME,OAAOJ,MAC5B9B,EAAgB,CAAEnB,MAAOoD,GAC3B,OAsBIf,EAAAA,EAAAA,KAAA,MAAAC,SAAKJ,MAGX,EC5BA,EARe,WACb,OACEG,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAACiB,EAAQ,KAGf,C","sources":["components/importApi.js","components/Searched/Searched.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getAllVideos = async query => {\n  const keyUrl = 'b210646498b3592e6bb7ee7bde572bd7';\n  const basicUrl = `https://api.themoviedb.org/3${query}api_key=${keyUrl}`;\n  const resp = await axios.get(basicUrl);\n  return resp;\n};\n","import { getAllVideos } from 'components/importApi';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Searched = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedState, setSearchedState] = useState([]);\n  const query = searchParams.get('query') || '';\n  const location = useLocation();\n\n  const handleSearch = event => {\n    const filter = event.target.value;\n    setSearchParams({ query: filter });\n  };\n\n  useEffect(() => {\n    const searchUrl = `/search/movie?query=${query}&`;\n    getAllVideos(searchUrl).then(search =>\n      setSearchedState(search.data.results)\n    );\n  }, [query]);\n\n  const searchedList = searchedState.map(video => (\n    <li key={video.id}>\n      <Link to={`${video.id}`} state={{ from: location }}>\n        {video.title || video.name}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      <div>\n        <input type=\"text\" value={query} onChange={handleSearch} />\n      </div>\n      <ul>{searchedList}</ul>\n    </>\n  );\n};\n\nexport default Searched;\n","import Searched from 'components/Searched/Searched';\n\nconst Movies = () => {\n  return (\n    <main>\n      <Searched />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["getAllVideos","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","basicUrl","resp","_context","prev","next","concat","axios","sent","abrupt","stop","_x","apply","arguments","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchedState","setSearchedState","get","location","useLocation","useEffect","searchUrl","then","search","data","results","searchedList","map","video","_jsx","children","Link","to","id","state","from","title","name","_jsxs","_Fragment","type","value","onChange","event","filter","target","Searched"],"sourceRoot":""}